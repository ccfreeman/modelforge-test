kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.serviceName }}-deployment
  labels:
{{ include "modelforge-api.labels" . | indent 4 }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.serviceName }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "{{ .Values.servicePort }}"
      labels:
{{ include "modelforge-api.labels" . | indent 8 }}
    spec:
      tolerations:
        - key: Reserved
          operator: Equal
          value: MTier01
          effect: NoSchedule
      nodeSelector:
        Reserved: MTier01
      containers:
      - name: {{ .Values.serviceName }}
        image: {{ .Values.image }} 
        imagePullPolicy: IfNotPresent
        command:
          - "uvicorn"
          - {{ .Values.appPath }}
          - "--port"
          - "{{ .Values.servicePort }}"
          - "--host"
          - "0.0.0.0"
          - "--log-level"
          - "warning"
          - "--loop"
          - "uvloop"
          - "--no-server-header"
        resources:
          requests:
            cpu: {{ .Values.cpuRequest }}
            memory: {{ .Values.memoryRequest }}
          limits:
            cpu: {{ .Values.cpuLimit }}
            memory: {{ .Values.memoryLimit }}
        env:
          - name: SERVICEBUS_CONN_STR
            valueFrom:
              secretKeyRef:
                name: {{ .Values.namespace }}-secrets
                key: sb--connection-string
          - name: RECEIVE_QUEUE_NAME
            value: response-queue
          - name: SERVICEBUS_PREFETCH_COUNT
            value: "50"
        ports:
        - containerPort: {{ .Values.servicePort }}
        startupProbe:
          httpGet:
            path: /health
            port: {{ .Values.servicePort }}
          initialDelaySeconds: 0
          failureThreshold: 36
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health/ready
            port: {{ .Values.servicePort }}
          failureThreshold: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health/ready
            port: {{ .Values.servicePort }}
          failureThreshold: 5
          periodSeconds: 5
---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.serviceName }}
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - name: http
    targetPort: {{ .Values.servicePort }}
    port: {{ .Values.servicePortShort }}
  selector:
{{ include "modelforge-api.labels" . | indent 4 }}
    